dispatcherConverter:
    # Absolute path to the src folder of the dispatcher sdk. You must include the src folder itself in the path.
    sdkSrc:
    # Add information about on-premise dispatcher configuration here
    onPremise:
        # Absolute path to the dispatcher.any file
        dispatcherAnySrc:
        # Path to the httpd.conf file (the main apache config file).
        # If `vhostsToConvert` is not specified you can use this property to find vhosts by parsing the main apache file
        httpdSrc:
        # Array of paths to vhosts files you wish to convert to cloud service configurations.
        vhostsToConvert:
        # Array of mapped objects that replace existing variables with new variables.
        # The original variable is first and the variable to replace is second.
        variablesToReplace:
        # This can be a file that you want to append to every vhost file in case you need logic added to all configurations.
        # This is useful to replace logic that was once stored in your main apache config file.
        appendToVhosts:
        # Array of paths to existing dispatcher configuration root folders to scan for the included files.
        # These paths help to map includes in the configurations to their current location in the provided folder structure.
        pathToPrepend:
        # Only port 80 is supported in AEM as a Cloud Service - if you were using a non standard port here and need it mapped
        # in AEM, provide it here - all other vhosts with non default ports will be removed.
        portsToMap:
    # Add information about Adobe Managed Services dispatcher configuration here
    ams:
        # Path to dispatcher configuration folder
        # (expected immediate subfolders - conf, conf.d, conf.dispatcher.d and conf.modules.d)
        cfg:
repositoryModernizer:
    # groupId to be used for newly created packages
    groupId:
    # information about parent pom
    parentPom:
        # absolute path to the parent pom file
        path:
        # the artifactId to be set for the parent pom
        artifactId:
        # the application title to be set for the parent pom
        appTitle:
        # version to be to be set for the parent pom
        version:
    # information required for all package
    all:
        # prefix that is to be used to set the artifactId for all package
        artifactId:
        # application title
        appTitle:
        # version to be set for all pom
        version:
    # information about projects (expects an array of project information)
    # NOTE : For multiple projects create separate copies of the info section for each project
    projects:
        - # absolute path to the project folder
          projectPath:
          # Array of relative path(s) (w.r.t. the project folder) to the existing content package(s) that needs to be restructured.
          # NOTE : only content packages are expected here, NOT bundle/jar artifacts
          existingContentPackageFolder:
              -
          # relative path (w.r.t. the existing content package folder) to the filter.xml file
          # (If not specified, default path `/src/main/content/META-INF/vault/filter.xml` will be used.)
          relativePathToExistingFilterXml:
          # relative path (w.r.t. the existing content package folder) to the jcr_root directory
          # (If not specified, default path `/src/main/content/jcr_root` will be used)
          relativePathToExistingJcrRoot:
          # prefix that is to be used to set the artifactId for newly created ui.apps and ui.content packages
          artifactId:
          # application title
          appTitle:
          # application ID (will be used for config and package folder names)
          appId:
          # project specific version to be used for content packages
          version:
indexConverter:
    # Path to the jcr_root directory of the package containing the Ensure Index Definitions
    # (please ignore if there are no Ensure Index Definitions)
    # eg. /Users/xyz/sampleCode/content/src/main/content/jcr_root
    ensureIndexDefinitionContentPackageJcrRootPath:
    # Path to the jcr_root directory of the package containing the Ensure Oak Index OSGI Configuration
    # (please ignore if there are no Ensure Index Definitions)
    # eg. /Users/xyz/sampleCode/CONFIG/src/main/content/jcr_root
    ensureIndexDefinitionConfigPackageJcrRootPath:
    # Version of AEM customer is on, used to determine the baseline index definitions
    aemVersion:
    # Path to the customer OAK Index Definition directory
    # (please ignore if there are no Oak Index Definitions)
    # eg /Users/xyz/sampleCode/ui.apps/src/main/content/jcr_root/_oak_index
    customOakIndexDirectoryPath:
    # Path to the existing package `filter.xml` file
    # eg /Users/xyz/sampleCode/ui.apps/src/main/content/META-INF/vault/filter.xml
    filterXMLPath:
